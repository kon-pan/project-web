<%- include('partials/head.ejs')  %> 
    <!-- Leaflet CSS -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.css"
      integrity="sha512-1xoFisiGdy9nvho8EgXuXvnpR5GAMSjFwp40gSRE3NwdUdIMIKuPa7bqoUhLD0O/5tPNhteAsE5XyyMi5reQVA=="
      crossorigin="anonymous"
    />
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://cdn.jsdelivr.net/npm/leaflet@1.7.1/dist/leaflet-src.min.js"></script>
    <!-- Custom CSS -->
    <link rel="stylesheet" href="static/css/user/style.css" />

    <title>HARτης | Welcome</title>
  </head>
  <body>
    <%- include('partials/navbar.ejs')  %> 
    <div class="container mt-3">
      <!-- DELETE LATER -->
      <h1>!!! MULTIPLE IP'S IN SAME LAT, LON !!!</h1>
      <!-- REFACTOR THIS? -->
      <input type="text" id="loggedInUserId" value="<%= user.id %> " hidden>
      <div class="row justify-content-center">
        <div class="col-12 p-3" id="map-wrapper">
          <div id="map"></div>
          <div class="row mt-4">
            <div class="col">
              <form class="form-inline" id="filter-heatmap-form">
                <div class="form-check mb-2 mr-sm-2">
                  <span class="px-3"><b>Filter by content type:</b></span>
                  <div
                    class="custom-control custom-radio custom-control-inline"
                  >
                    <input
                      type="radio"
                      id="filter-all"
                      name="filterValue"
                      value="all"
                      class="custom-control-input"
                    />
                    <label class="custom-control-label" for="filter-all"
                      >All</label
                    >
                  </div>
                  <div
                    class="custom-control custom-radio custom-control-inline"
                  >
                    <input
                      type="radio"
                      id="filter-html"
                      name="filterValue"
                      value="html"
                      class="custom-control-input"
                    />
                    <label class="custom-control-label" for="filter-html"
                      >HTML</label
                    >
                  </div>
                  <div
                    class="custom-control custom-radio custom-control-inline"
                  >
                    <input
                      type="radio"
                      id="filter-js"
                      name="filterValue"
                      value="js"
                      class="custom-control-input"
                    />
                    <label class="custom-control-label" for="filter-js"
                      >JS</label
                    >
                  </div>
                  <div
                    class="custom-control custom-radio custom-control-inline"
                  >
                    <input
                      type="radio"
                      id="filter-domains"
                      name="filterValue"
                      value="domains"
                      class="custom-control-input"
                    />
                    <label class="custom-control-label" for="filter-domains"
                      >Domains</label
                    >
                  </div>
                  <div
                    class="custom-control custom-radio custom-control-inline"
                  >
                    <input
                      type="radio"
                      id="customRadioInline2"
                      name="filterValue"
                      class="custom-control-input"
                    />
                    <label class="custom-control-label" for="customRadioInline2"
                      >Value 5</label
                    >
                  </div>
                  <button class="btn btn-primary btn-sm" type="submit">
                    Apply
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script
      src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
      crossorigin="anonymous"
    ></script>
    <!-- Leaflet Heatmap -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/heatmap.js/2.0.0/heatmap.min.js"
      integrity="sha512-FpvmtV53P/z7yzv1TAIVH7PNz94EKXs5aV6ts/Zi+B/VeGU5Xwo6KIbwpTgKc0d4urD/BtkK50IC9785y68/AA=="
      crossorigin="anonymous"
    ></script>
    <script src="/static/js/user/leaflet-heatmap.js"></script>
    <!-- <script src="/static/js/user/filter-heatmap.js"></script> -->
    <!-- My scripts -->
    <script>
      const loggedInUserId = document.querySelector('#loggedInUserId').value;
      console.log(loggedInUserId);

      let baseLayer = L.tileLayer(
        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
          attribution: '...',
          maxZoom: 18
        }
      );

      let cfg = {
        radius: 30,
        maxOpacity: 0.4,
        minOpacity: 0,
        blur: 0.75,
      };

      let heatmapLayer = new HeatmapOverlay(cfg);


      let map = new L.Map('map', {
        center: new L.LatLng(25.6586, -80.3568),
        zoom: 4,
        layers: [baseLayer, heatmapLayer]
      });

      // Initial render
      const createHeatMap = async() => {
        let data = await fetch(`http://${location.host}/heatmap/getData/${loggedInUserId}?filter=all`);
        console.log(data);
        data = await data.json();
        console.log(data);
        let heatMapData = [];
        for (let elem of data) {
          if (!(elem.server_lat === null || elem.server_lon === null)) {
            heatMapData.push({
              lat: elem.server_lat,
              lng: elem.server_lon,
              freq: elem.freq,
            });
          }
        }

        var testData = {
          max: 10,
          data: heatMapData,
        };

        heatmapLayer.setData(testData);
      }

      // Initial render
      const filterHeatMap = async(filter) => {
        let data = await fetch(`http://${location.host}/heatmap/getData/${loggedInUserId}?filter=${filter}`);
        console.log(data);
        data = await data.json();
        console.log(data);
        let heatMapData = [];
        for (let elem of data) {
          if (!(elem.server_lat === null || elem.server_lon === null)) {
            heatMapData.push({
              lat: elem.server_lat,
              lng: elem.server_lon,
              freq: elem.freq,
            });
          }
        }

        var testData = {
          max: 10,
          data: heatMapData,
        };

        heatmapLayer.setData(testData);
      }

      const filterHeatmapForm = document.querySelector('#filter-heatmap-form');
      filterHeatmapForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const filter = filterHeatmapForm.elements['filterValue'].value;
        filterHeatMap(filter);
      });
      
      createHeatMap();
    </script>
  </body>
</html>
